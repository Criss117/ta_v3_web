/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as IndexRouteImport } from './routes/index'
import { Route as privateDashboardRouteImport } from './routes/(private)/dashboard'
import { Route as AuthSignUpIndexRouteImport } from './routes/auth/sign-up/index'
import { Route as AuthSignInIndexRouteImport } from './routes/auth/sign-in/index'
import { Route as privateSalesIndexRouteImport } from './routes/(private)/sales/index'
import { Route as privateDashboardIndexRouteImport } from './routes/(private)/dashboard/index'
import { Route as privateDashboardSalesRouteImport } from './routes/(private)/dashboard/sales'
import { Route as privateDashboardProductsRouteImport } from './routes/(private)/dashboard/products'
import { Route as privateDashboardAnalyticsRouteImport } from './routes/(private)/dashboard/analytics'
import { Route as privateDashboardClientsIndexRouteImport } from './routes/(private)/dashboard/clients/index'
import { Route as privateDashboardClientsIdRouteImport } from './routes/(private)/dashboard/clients/$id'

const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const privateDashboardRoute = privateDashboardRouteImport.update({
  id: '/(private)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpIndexRoute = AuthSignUpIndexRouteImport.update({
  id: '/auth/sign-up/',
  path: '/auth/sign-up/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInIndexRoute = AuthSignInIndexRouteImport.update({
  id: '/auth/sign-in/',
  path: '/auth/sign-in/',
  getParentRoute: () => rootRouteImport,
} as any)
const privateSalesIndexRoute = privateSalesIndexRouteImport.update({
  id: '/(private)/sales/',
  path: '/sales/',
  getParentRoute: () => rootRouteImport,
} as any)
const privateDashboardIndexRoute = privateDashboardIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => privateDashboardRoute,
} as any)
const privateDashboardSalesRoute = privateDashboardSalesRouteImport.update({
  id: '/sales',
  path: '/sales',
  getParentRoute: () => privateDashboardRoute,
} as any)
const privateDashboardProductsRoute =
  privateDashboardProductsRouteImport.update({
    id: '/products',
    path: '/products',
    getParentRoute: () => privateDashboardRoute,
  } as any)
const privateDashboardAnalyticsRoute =
  privateDashboardAnalyticsRouteImport.update({
    id: '/analytics',
    path: '/analytics',
    getParentRoute: () => privateDashboardRoute,
  } as any)
const privateDashboardClientsIndexRoute =
  privateDashboardClientsIndexRouteImport.update({
    id: '/clients/',
    path: '/clients/',
    getParentRoute: () => privateDashboardRoute,
  } as any)
const privateDashboardClientsIdRoute =
  privateDashboardClientsIdRouteImport.update({
    id: '/clients/$id',
    path: '/clients/$id',
    getParentRoute: () => privateDashboardRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof privateDashboardRouteWithChildren
  '/dashboard/analytics': typeof privateDashboardAnalyticsRoute
  '/dashboard/products': typeof privateDashboardProductsRoute
  '/dashboard/sales': typeof privateDashboardSalesRoute
  '/dashboard/': typeof privateDashboardIndexRoute
  '/sales': typeof privateSalesIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/dashboard/clients/$id': typeof privateDashboardClientsIdRoute
  '/dashboard/clients': typeof privateDashboardClientsIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard/analytics': typeof privateDashboardAnalyticsRoute
  '/dashboard/products': typeof privateDashboardProductsRoute
  '/dashboard/sales': typeof privateDashboardSalesRoute
  '/dashboard': typeof privateDashboardIndexRoute
  '/sales': typeof privateSalesIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/dashboard/clients/$id': typeof privateDashboardClientsIdRoute
  '/dashboard/clients': typeof privateDashboardClientsIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/(private)/dashboard': typeof privateDashboardRouteWithChildren
  '/(private)/dashboard/analytics': typeof privateDashboardAnalyticsRoute
  '/(private)/dashboard/products': typeof privateDashboardProductsRoute
  '/(private)/dashboard/sales': typeof privateDashboardSalesRoute
  '/(private)/dashboard/': typeof privateDashboardIndexRoute
  '/(private)/sales/': typeof privateSalesIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/(private)/dashboard/clients/$id': typeof privateDashboardClientsIdRoute
  '/(private)/dashboard/clients/': typeof privateDashboardClientsIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/analytics'
    | '/dashboard/products'
    | '/dashboard/sales'
    | '/dashboard/'
    | '/sales'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/clients/$id'
    | '/dashboard/clients'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard/analytics'
    | '/dashboard/products'
    | '/dashboard/sales'
    | '/dashboard'
    | '/sales'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/clients/$id'
    | '/dashboard/clients'
  id:
    | '__root__'
    | '/'
    | '/(private)/dashboard'
    | '/(private)/dashboard/analytics'
    | '/(private)/dashboard/products'
    | '/(private)/dashboard/sales'
    | '/(private)/dashboard/'
    | '/(private)/sales/'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/(private)/dashboard/clients/$id'
    | '/(private)/dashboard/clients/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  privateDashboardRoute: typeof privateDashboardRouteWithChildren
  privateSalesIndexRoute: typeof privateSalesIndexRoute
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/dashboard': {
      id: '/(private)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof privateDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/sales/': {
      id: '/(private)/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof privateSalesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(private)/dashboard/': {
      id: '/(private)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof privateDashboardIndexRouteImport
      parentRoute: typeof privateDashboardRoute
    }
    '/(private)/dashboard/sales': {
      id: '/(private)/dashboard/sales'
      path: '/sales'
      fullPath: '/dashboard/sales'
      preLoaderRoute: typeof privateDashboardSalesRouteImport
      parentRoute: typeof privateDashboardRoute
    }
    '/(private)/dashboard/products': {
      id: '/(private)/dashboard/products'
      path: '/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof privateDashboardProductsRouteImport
      parentRoute: typeof privateDashboardRoute
    }
    '/(private)/dashboard/analytics': {
      id: '/(private)/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof privateDashboardAnalyticsRouteImport
      parentRoute: typeof privateDashboardRoute
    }
    '/(private)/dashboard/clients/': {
      id: '/(private)/dashboard/clients/'
      path: '/clients'
      fullPath: '/dashboard/clients'
      preLoaderRoute: typeof privateDashboardClientsIndexRouteImport
      parentRoute: typeof privateDashboardRoute
    }
    '/(private)/dashboard/clients/$id': {
      id: '/(private)/dashboard/clients/$id'
      path: '/clients/$id'
      fullPath: '/dashboard/clients/$id'
      preLoaderRoute: typeof privateDashboardClientsIdRouteImport
      parentRoute: typeof privateDashboardRoute
    }
  }
}

interface privateDashboardRouteChildren {
  privateDashboardAnalyticsRoute: typeof privateDashboardAnalyticsRoute
  privateDashboardProductsRoute: typeof privateDashboardProductsRoute
  privateDashboardSalesRoute: typeof privateDashboardSalesRoute
  privateDashboardIndexRoute: typeof privateDashboardIndexRoute
  privateDashboardClientsIdRoute: typeof privateDashboardClientsIdRoute
  privateDashboardClientsIndexRoute: typeof privateDashboardClientsIndexRoute
}

const privateDashboardRouteChildren: privateDashboardRouteChildren = {
  privateDashboardAnalyticsRoute: privateDashboardAnalyticsRoute,
  privateDashboardProductsRoute: privateDashboardProductsRoute,
  privateDashboardSalesRoute: privateDashboardSalesRoute,
  privateDashboardIndexRoute: privateDashboardIndexRoute,
  privateDashboardClientsIdRoute: privateDashboardClientsIdRoute,
  privateDashboardClientsIndexRoute: privateDashboardClientsIndexRoute,
}

const privateDashboardRouteWithChildren =
  privateDashboardRoute._addFileChildren(privateDashboardRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  privateDashboardRoute: privateDashboardRouteWithChildren,
  privateSalesIndexRoute: privateSalesIndexRoute,
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
