/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as privateDashboardImport } from './routes/(private)/dashboard'
import { Route as AuthSignUpIndexImport } from './routes/auth/sign-up/index'
import { Route as AuthSignInIndexImport } from './routes/auth/sign-in/index'
import { Route as privateSalesIndexImport } from './routes/(private)/sales/index'
import { Route as privateDashboardIndexImport } from './routes/(private)/dashboard/index'
import { Route as privateDashboardSalesImport } from './routes/(private)/dashboard/sales'
import { Route as privateDashboardProductsImport } from './routes/(private)/dashboard/products'
import { Route as privateDashboardAnalyticsImport } from './routes/(private)/dashboard/analytics'
import { Route as privateDashboardClientsIndexImport } from './routes/(private)/dashboard/clients/index'
import { Route as privateDashboardClientsIdImport } from './routes/(private)/dashboard/clients/$id'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const privateDashboardRoute = privateDashboardImport.update({
  id: '/(private)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignUpIndexRoute = AuthSignUpIndexImport.update({
  id: '/auth/sign-up/',
  path: '/auth/sign-up/',
  getParentRoute: () => rootRoute,
} as any)

const AuthSignInIndexRoute = AuthSignInIndexImport.update({
  id: '/auth/sign-in/',
  path: '/auth/sign-in/',
  getParentRoute: () => rootRoute,
} as any)

const privateSalesIndexRoute = privateSalesIndexImport.update({
  id: '/(private)/sales/',
  path: '/sales/',
  getParentRoute: () => rootRoute,
} as any)

const privateDashboardIndexRoute = privateDashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => privateDashboardRoute,
} as any)

const privateDashboardSalesRoute = privateDashboardSalesImport.update({
  id: '/sales',
  path: '/sales',
  getParentRoute: () => privateDashboardRoute,
} as any)

const privateDashboardProductsRoute = privateDashboardProductsImport.update({
  id: '/products',
  path: '/products',
  getParentRoute: () => privateDashboardRoute,
} as any)

const privateDashboardAnalyticsRoute = privateDashboardAnalyticsImport.update({
  id: '/analytics',
  path: '/analytics',
  getParentRoute: () => privateDashboardRoute,
} as any)

const privateDashboardClientsIndexRoute =
  privateDashboardClientsIndexImport.update({
    id: '/clients/',
    path: '/clients/',
    getParentRoute: () => privateDashboardRoute,
  } as any)

const privateDashboardClientsIdRoute = privateDashboardClientsIdImport.update({
  id: '/clients/$id',
  path: '/clients/$id',
  getParentRoute: () => privateDashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/(private)/dashboard': {
      id: '/(private)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof privateDashboardImport
      parentRoute: typeof rootRoute
    }
    '/(private)/dashboard/analytics': {
      id: '/(private)/dashboard/analytics'
      path: '/analytics'
      fullPath: '/dashboard/analytics'
      preLoaderRoute: typeof privateDashboardAnalyticsImport
      parentRoute: typeof privateDashboardImport
    }
    '/(private)/dashboard/products': {
      id: '/(private)/dashboard/products'
      path: '/products'
      fullPath: '/dashboard/products'
      preLoaderRoute: typeof privateDashboardProductsImport
      parentRoute: typeof privateDashboardImport
    }
    '/(private)/dashboard/sales': {
      id: '/(private)/dashboard/sales'
      path: '/sales'
      fullPath: '/dashboard/sales'
      preLoaderRoute: typeof privateDashboardSalesImport
      parentRoute: typeof privateDashboardImport
    }
    '/(private)/dashboard/': {
      id: '/(private)/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof privateDashboardIndexImport
      parentRoute: typeof privateDashboardImport
    }
    '/(private)/sales/': {
      id: '/(private)/sales/'
      path: '/sales'
      fullPath: '/sales'
      preLoaderRoute: typeof privateSalesIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-in/': {
      id: '/auth/sign-in/'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/sign-up/': {
      id: '/auth/sign-up/'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpIndexImport
      parentRoute: typeof rootRoute
    }
    '/(private)/dashboard/clients/$id': {
      id: '/(private)/dashboard/clients/$id'
      path: '/clients/$id'
      fullPath: '/dashboard/clients/$id'
      preLoaderRoute: typeof privateDashboardClientsIdImport
      parentRoute: typeof privateDashboardImport
    }
    '/(private)/dashboard/clients/': {
      id: '/(private)/dashboard/clients/'
      path: '/clients'
      fullPath: '/dashboard/clients'
      preLoaderRoute: typeof privateDashboardClientsIndexImport
      parentRoute: typeof privateDashboardImport
    }
  }
}

// Create and export the route tree

interface privateDashboardRouteChildren {
  privateDashboardAnalyticsRoute: typeof privateDashboardAnalyticsRoute
  privateDashboardProductsRoute: typeof privateDashboardProductsRoute
  privateDashboardSalesRoute: typeof privateDashboardSalesRoute
  privateDashboardIndexRoute: typeof privateDashboardIndexRoute
  privateDashboardClientsIdRoute: typeof privateDashboardClientsIdRoute
  privateDashboardClientsIndexRoute: typeof privateDashboardClientsIndexRoute
}

const privateDashboardRouteChildren: privateDashboardRouteChildren = {
  privateDashboardAnalyticsRoute: privateDashboardAnalyticsRoute,
  privateDashboardProductsRoute: privateDashboardProductsRoute,
  privateDashboardSalesRoute: privateDashboardSalesRoute,
  privateDashboardIndexRoute: privateDashboardIndexRoute,
  privateDashboardClientsIdRoute: privateDashboardClientsIdRoute,
  privateDashboardClientsIndexRoute: privateDashboardClientsIndexRoute,
}

const privateDashboardRouteWithChildren =
  privateDashboardRoute._addFileChildren(privateDashboardRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dashboard': typeof privateDashboardRouteWithChildren
  '/dashboard/analytics': typeof privateDashboardAnalyticsRoute
  '/dashboard/products': typeof privateDashboardProductsRoute
  '/dashboard/sales': typeof privateDashboardSalesRoute
  '/dashboard/': typeof privateDashboardIndexRoute
  '/sales': typeof privateSalesIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/dashboard/clients/$id': typeof privateDashboardClientsIdRoute
  '/dashboard/clients': typeof privateDashboardClientsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dashboard/analytics': typeof privateDashboardAnalyticsRoute
  '/dashboard/products': typeof privateDashboardProductsRoute
  '/dashboard/sales': typeof privateDashboardSalesRoute
  '/dashboard': typeof privateDashboardIndexRoute
  '/sales': typeof privateSalesIndexRoute
  '/auth/sign-in': typeof AuthSignInIndexRoute
  '/auth/sign-up': typeof AuthSignUpIndexRoute
  '/dashboard/clients/$id': typeof privateDashboardClientsIdRoute
  '/dashboard/clients': typeof privateDashboardClientsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/(private)/dashboard': typeof privateDashboardRouteWithChildren
  '/(private)/dashboard/analytics': typeof privateDashboardAnalyticsRoute
  '/(private)/dashboard/products': typeof privateDashboardProductsRoute
  '/(private)/dashboard/sales': typeof privateDashboardSalesRoute
  '/(private)/dashboard/': typeof privateDashboardIndexRoute
  '/(private)/sales/': typeof privateSalesIndexRoute
  '/auth/sign-in/': typeof AuthSignInIndexRoute
  '/auth/sign-up/': typeof AuthSignUpIndexRoute
  '/(private)/dashboard/clients/$id': typeof privateDashboardClientsIdRoute
  '/(private)/dashboard/clients/': typeof privateDashboardClientsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dashboard'
    | '/dashboard/analytics'
    | '/dashboard/products'
    | '/dashboard/sales'
    | '/dashboard/'
    | '/sales'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/clients/$id'
    | '/dashboard/clients'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dashboard/analytics'
    | '/dashboard/products'
    | '/dashboard/sales'
    | '/dashboard'
    | '/sales'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/dashboard/clients/$id'
    | '/dashboard/clients'
  id:
    | '__root__'
    | '/'
    | '/(private)/dashboard'
    | '/(private)/dashboard/analytics'
    | '/(private)/dashboard/products'
    | '/(private)/dashboard/sales'
    | '/(private)/dashboard/'
    | '/(private)/sales/'
    | '/auth/sign-in/'
    | '/auth/sign-up/'
    | '/(private)/dashboard/clients/$id'
    | '/(private)/dashboard/clients/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  privateDashboardRoute: typeof privateDashboardRouteWithChildren
  privateSalesIndexRoute: typeof privateSalesIndexRoute
  AuthSignInIndexRoute: typeof AuthSignInIndexRoute
  AuthSignUpIndexRoute: typeof AuthSignUpIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  privateDashboardRoute: privateDashboardRouteWithChildren,
  privateSalesIndexRoute: privateSalesIndexRoute,
  AuthSignInIndexRoute: AuthSignInIndexRoute,
  AuthSignUpIndexRoute: AuthSignUpIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/(private)/dashboard",
        "/(private)/sales/",
        "/auth/sign-in/",
        "/auth/sign-up/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/(private)/dashboard": {
      "filePath": "(private)/dashboard.tsx",
      "children": [
        "/(private)/dashboard/analytics",
        "/(private)/dashboard/products",
        "/(private)/dashboard/sales",
        "/(private)/dashboard/",
        "/(private)/dashboard/clients/$id",
        "/(private)/dashboard/clients/"
      ]
    },
    "/(private)/dashboard/analytics": {
      "filePath": "(private)/dashboard/analytics.tsx",
      "parent": "/(private)/dashboard"
    },
    "/(private)/dashboard/products": {
      "filePath": "(private)/dashboard/products.tsx",
      "parent": "/(private)/dashboard"
    },
    "/(private)/dashboard/sales": {
      "filePath": "(private)/dashboard/sales.tsx",
      "parent": "/(private)/dashboard"
    },
    "/(private)/dashboard/": {
      "filePath": "(private)/dashboard/index.tsx",
      "parent": "/(private)/dashboard"
    },
    "/(private)/sales/": {
      "filePath": "(private)/sales/index.tsx"
    },
    "/auth/sign-in/": {
      "filePath": "auth/sign-in/index.tsx"
    },
    "/auth/sign-up/": {
      "filePath": "auth/sign-up/index.tsx"
    },
    "/(private)/dashboard/clients/$id": {
      "filePath": "(private)/dashboard/clients/$id.tsx",
      "parent": "/(private)/dashboard"
    },
    "/(private)/dashboard/clients/": {
      "filePath": "(private)/dashboard/clients/index.tsx",
      "parent": "/(private)/dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
